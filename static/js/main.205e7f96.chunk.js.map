{"version":3,"sources":["App.js","index.js"],"names":["style","position","top","left","transform","width","bgcolor","border","boxShadow","p","App","useState","data","setData","selectionModel","setSelectionModel","search","setSearch","page","setPage","open","setOpen","handleClose","editData","setEditData","columns","field","headerName","sortable","renderCell","params","Grid","item","xs","IconButton","onClick","e","stopPropagation","api","thisRow","getAllColumns","filter","c","forEach","getValue","id","temp","obj","row","console","log","useEffect","axios","get","then","response","name","toLowerCase","includes","email","role","className","height","TextField","placeholder","margin","color","onChange","target","value","trim","Modal","onClose","Box","sx","Button","variant","map","rows","pageSize","checkboxSelection","onSelectionModelChange","newSelection","selection","length","slice","onPageChange","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kVAaMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAEU,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAAwBN,mBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAAwBR,oBAAS,GAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAEMC,EAAc,kBAAMD,GAAQ,IAClC,EAAgCV,mBAAS,IAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KAEMC,EAAU,CACd,CAAEC,MAAO,KAAMC,WAAY,KAAMtB,MAAO,IACxC,CAAEqB,MAAO,OAAQC,WAAY,OAAQtB,MAAO,KAC5C,CAAEqB,MAAO,QAASC,WAAY,QAAStB,MAAO,KAC9C,CACEqB,MAAO,OACPC,WAAY,OACZtB,MAAO,IAET,CACEqB,MAAO,SACPC,WAAY,SACZC,UAAU,EACVvB,MAAO,IACPwB,WAAY,SAACC,GAmCX,OACE,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,UACE,cAACC,EAAA,EAAD,CAAYC,QApCK,SAACC,GACpBA,EAAEC,kBAEF,IAAMC,EAAMR,EAAOQ,IACbC,EAAU,GAEhBD,EACGE,gBACAC,QAAO,SAACC,GAAD,MAAmB,cAAZA,EAAEhB,SAA2BgB,KAC3CC,SACC,SAACD,GAAD,OAAQH,EAAQG,EAAEhB,OAASI,EAAOc,SAASd,EAAOe,GAAIH,EAAEhB,UAE5D,IAAIoB,EAAOlC,EAAK6B,QAAO,SAACM,GAAD,OAASR,EAAQM,KAAOE,EAAIF,MACnDhC,EAAQiC,GACRE,EAAMpC,EACNqC,QAAQC,IAAIX,IAqBV,SACE,cAAC,IAAD,MAEF,cAACL,EAAA,EAAD,CAAYC,QArBG,SAACC,GAClBA,EAAEC,kBAEF,IAAMC,EAAMR,EAAOQ,IACbC,EAAU,GAEhBD,EACGE,gBACAC,QAAO,SAACC,GAAD,MAAmB,cAAZA,EAAEhB,SAA2BgB,KAC3CC,SACC,SAACD,GAAD,OAAQH,EAAQG,EAAEhB,OAASI,EAAOc,SAASd,EAAOe,GAAIH,EAAEhB,UA/C3CL,GAAQ,GAkDzBG,EAAYe,IAQV,SACE,cAAC,IAAD,YAQZY,qBAAU,WACRC,IAAMC,IAvFR,kFAuFqBC,MAAK,SAACC,GACvB1C,EAAQ0C,EAAS3C,WAElB,IAEH,IAMIoC,EAAMpC,EAAK6B,QACb,SAACM,GAAD,OACEA,EAAIS,KAAKC,cAAcC,SAAS1C,IAChC+B,EAAIY,MAAMF,cAAcC,SAAS1C,IACjC+B,EAAIa,KAAKH,cAAcC,SAAS1C,MAMpC,OACE,qBAAK6C,UAAU,MAAf,SACE,sBAAK7D,MAAO,CAAE8D,OAAQ,IAAKzD,MAAO,QAAlC,UACE,cAAC0D,EAAA,EAAD,CACEC,YAAY,gCACZhE,MAAO,CAAEiE,OAAQ,MAAO5D,MAAO,SAC/B6D,MAAM,UACNC,SAXa,SAAC/B,GACpBnB,EAAUmB,EAAEgC,OAAOC,MAAMZ,cAAca,WAYnC,cAACC,EAAA,EAAD,CACEnD,KAAMA,EACNoD,QAASlD,EACT,kBAAgB,oBAChB,mBAAiB,0BAJnB,SAME,eAACmD,EAAA,EAAD,CAAKC,GAAI1E,EAAT,UACE,cAAC+D,EAAA,EAAD,CACE/D,MAAO,CAAEiE,OAAQ,OACjBI,MAAO9C,EAASiC,KAChBW,SAAU,SAAC/B,GACTZ,EAAY,2BAAKD,GAAN,IAAgBiC,KAAMpB,EAAEgC,OAAOC,YAG9C,cAACN,EAAA,EAAD,CACE/D,MAAO,CAAEiE,OAAQ,OACjBI,MAAO9C,EAASoC,MAChBQ,SAAU,SAAC/B,GACTZ,EAAY,2BAAKD,GAAN,IAAgBoC,MAAOvB,EAAEgC,OAAOC,YAG/C,cAACN,EAAA,EAAD,CACE/D,MAAO,CAAEiE,OAAQ,OACjBI,MAAO9C,EAASqC,KAChBO,SAAU,SAAC/B,GACTZ,EAAY,2BAAKD,GAAN,IAAgBqC,KAAMxB,EAAEgC,OAAOC,YAG9C,cAACM,EAAA,EAAD,CACE3E,MAAO,CAAEiE,OAAQ,OACjBW,QAAQ,WACRV,MAAM,UACN/B,QAAS,WACP,IAAIW,EAAOlC,EAAKiE,KAAI,SAAC9B,GACnB,OAAIA,EAAIF,KAAOtB,EAASsB,GACftB,EAEAwB,KAGXlC,EAAQiC,GACRxB,KAbJ,yBAoBJ,cAAC,IAAD,CACEwD,KAAM9B,EACNvB,QAASA,EACTsD,SAAU,GACVC,mBAAiB,EACjBC,uBAAwB,SAACC,GACvB,IAAIC,EAAY,GACZD,EAAaE,SAAWxE,EAAKwE,QAC/BnC,QAAQC,IAAIhC,GACZiE,EAAYD,EAAaG,MAAa,GAAPnE,EAAkB,GAAPA,EAAY,IACtDH,EAAkBoE,IAElBpE,EAAkBmE,IAGtBI,aAAc,SAACpE,GAAD,OAAUC,EAAQD,IAChCJ,eAAgBA,IAElB,cAAC6D,EAAA,EAAD,CACExC,QA5Fe,WACrB,IAAIW,EAAOlC,EAAK6B,QAAO,SAACM,GAAD,OAAUjC,EAAe4C,SAASX,EAAIF,OAC7DhC,EAAQiC,GACR/B,EAAkB,KA0FZf,MAAO,CAAEiE,OAAQ,MAAOhE,SAAU,WAAYE,KAAM,QACpDyE,QAAQ,WACRV,MAAM,QAJR,kCC7LR,IAAMqB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACjF,EAAD,MAEF6E,K","file":"static/js/main.205e7f96.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useState, useEffect } from \"react\";\nimport { IconButton, Button, TextField, Modal, Box } from \"@mui/material\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport EditIcon from \"@mui/icons-material/Edit\";\n\nimport Grid from \"@mui/material/Grid\";\nimport { DataGrid, GridColDef, GridApi, GridCellValue } from \"@mui/x-data-grid\";\n\nimport axios from \"axios\";\nconst baseURL =\n  \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 300,\n  bgcolor: \"background.paper\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 5\n};\nexport default function App() {\n  const [data, setData] = useState([]);\n  const [selectionModel, setSelectionModel] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(0);\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const [editData, setEditData] = useState([]);\n\n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 50 },\n    { field: \"name\", headerName: \"Name\", width: 150 },\n    { field: \"email\", headerName: \"Email\", width: 200 },\n    {\n      field: \"role\",\n      headerName: \"Role\",\n      width: 90\n    },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      sortable: false,\n      width: 150,\n      renderCell: (params) => {\n        const handleDelete = (e) => {\n          e.stopPropagation(); // don't select this row after clicking\n\n          const api = params.api;\n          const thisRow = {};\n\n          api\n            .getAllColumns()\n            .filter((c) => c.field !== \"__check__\" && !!c)\n            .forEach(\n              (c) => (thisRow[c.field] = params.getValue(params.id, c.field))\n            );\n          let temp = data.filter((obj) => thisRow.id !== obj.id);\n          setData(temp);\n          row = data;\n          console.log(thisRow);\n        };\n\n        const handleEdit = (e) => {\n          e.stopPropagation(); // don't select this row after clicking\n\n          const api = params.api;\n          const thisRow = {};\n\n          api\n            .getAllColumns()\n            .filter((c) => c.field !== \"__check__\" && !!c)\n            .forEach(\n              (c) => (thisRow[c.field] = params.getValue(params.id, c.field))\n            );\n          handleOpen();\n          setEditData(thisRow);\n        };\n\n        return (\n          <Grid item xs={8}>\n            <IconButton onClick={handleDelete}>\n              <DeleteIcon />\n            </IconButton>\n            <IconButton onClick={handleEdit}>\n              <EditIcon />\n            </IconButton>\n          </Grid>\n        );\n      }\n    }\n  ];\n\n  useEffect(() => {\n    axios.get(baseURL).then((response) => {\n      setData(response.data);\n    });\n  }, []);\n\n  const deleteSelected = () => {\n    let temp = data.filter((obj) => !selectionModel.includes(obj.id));\n    setData(temp);\n    setSelectionModel([]);\n  };\n\n  let row = data.filter(\n    (obj) =>\n      obj.name.toLowerCase().includes(search) ||\n      obj.email.toLowerCase().includes(search) ||\n      obj.role.toLowerCase().includes(search)\n  );\n  const handleSearch = (e) => {\n    setSearch(e.target.value.toLowerCase().trim());\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{ height: 500, width: \"100%\" }}>\n        <TextField\n          placeholder=\"Search by name, email or role\"\n          style={{ margin: \"5px\", width: \"500px\" }}\n          color=\"primary\"\n          onChange={handleSearch}\n        />\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box sx={style}>\n            <TextField\n              style={{ margin: \"2px\" }}\n              value={editData.name}\n              onChange={(e) => {\n                setEditData({ ...editData, name: e.target.value });\n              }}\n            />\n            <TextField\n              style={{ margin: \"2px\" }}\n              value={editData.email}\n              onChange={(e) => {\n                setEditData({ ...editData, email: e.target.value });\n              }}\n            />\n            <TextField\n              style={{ margin: \"2px\" }}\n              value={editData.role}\n              onChange={(e) => {\n                setEditData({ ...editData, role: e.target.value });\n              }}\n            />\n            <Button\n              style={{ margin: \"2px\" }}\n              variant=\"outlined\"\n              color=\"success\"\n              onClick={() => {\n                let temp = data.map((obj) => {\n                  if (obj.id === editData.id) {\n                    return editData;\n                  } else {\n                    return obj;\n                  }\n                });\n                setData(temp);\n                handleClose();\n              }}\n            >\n              Update\n            </Button>\n          </Box>\n        </Modal>\n        <DataGrid\n          rows={row}\n          columns={columns}\n          pageSize={10}\n          checkboxSelection\n          onSelectionModelChange={(newSelection) => {\n            let selection = [];\n            if (newSelection.length === data.length) {\n              console.log(page);\n              selection = newSelection.slice(page * 10, page * 10 + 10);\n              setSelectionModel(selection);\n            } else {\n              setSelectionModel(newSelection);\n            }\n          }}\n          onPageChange={(page) => setPage(page)}\n          selectionModel={selectionModel}\n        />\n        <Button\n          onClick={deleteSelected}\n          style={{ margin: \"5px\", position: \"relative\", left: \"10px\" }}\n          variant=\"outlined\"\n          color=\"error\"\n        >\n          Delete Selected\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}